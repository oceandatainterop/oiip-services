<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<dataConfig>
    <dataSource driver="org.postgresql.Driver"
        url="jdbc:postgresql://host.docker.internal:5432/tagbase"
        name="tagbase"
        user="tagbase"
        password="" />
    <dataSource driver="org.postgresql.Driver"
    	url="jdbc:postgresql://host.docker.internal:5432/spurs"
    	name="spurs"
    	user="spurs"
    	password="" />
    <dataSource driver="org.postgresql.Driver"
    	url="jdbc:postgresql://host.docker.internal:5432/saildrone"
    	name="saildrone"
    	user="saildrone"
    	password="" />
    <dataSource driver="org.postgresql.Driver"
    	url="jdbc:postgresql://host.docker.internal:5432/taghost"
    	name="taghost"
    	user="tagbase"
    	password="" />
    <dataSource driver="org.postgresql.Driver"
    	url="jdbc:postgresql://host.docker.internal:5432/satellite"
    	name="satellite"
    	user="satellite"
    	password="" />
    <dataSource driver="org.postgresql.Driver"
    	url="jdbc:postgresql://host.docker.internal:5432/csiro"
    	name="csiro"
    	user="tagbase"
    	password="" />
    <document name="oiip">
        <entity name="mview_vis_data_tabular" pk="id" dataSource="tagbase"
            query="SELECT 'tagbase_data_'||row_number() OVER () as id, 'tagbase' as project, 'data' as datatype, * FROM public.mview_vis_data_tabular;"
            deltaImportQuery="SELECT 'tagbase_data_'||row_number() OVER () as id, 'tagbase' as project, 'data' as datatype, * FROM public.mview_vis_data_tabular where 'tagbase_data_'||row_number = '${dih.delta.id}';"
            deltaQuery="SELECT 'tagbase_data_'||row_number() OVER () as id, 'tagbase' as project, 'data' as datatype, * FROM public.mview_vis_data_tabular where last_modified &gt; '${dih.last_index_time}';">
        </entity>
        <entity name="mview_vis_titles" pk="id" dataSource="tagbase" transformer="RegexTransformer"
            query="SELECT 'tagbase_track_'||row_number() OVER () as id, concat_ws('|','tagbase',mview_vis_titles.source_id,trim(platform)) as track_id, 'track' as datatype, trim(platform) as platform, trim(platform_id) as platform_id, 'tagbase' as project, trim(project) as program, trim(instrument) as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, thumbnail_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles, mview_vis_variables WHERE mview_vis_titles.source_id = mview_vis_variables.source_id;"
            deltaImportQuery="SELECT 'tagbase_track_'||row_number() OVER () as id, concat_ws('|','tagbase',mview_vis_titles.source_id,trim(platform)) as track_id, 'track' as datatype, trim(platform) as platform, trim(platform_id) as platform_id, 'tagbase' as project, trim(project) as program, trim(instrument) as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, thumbnail_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles, mview_vis_variables WHERE mview_vis_titles.source_id = mview_vis_variables.source_id AND 'tagbase_track_'||row_number() OVER () = '${dih.delta.id}';"
            deltaQuery="SELECT 'tagbase_track_'||row_number() OVER () as id, concat_ws('|','tagbase',mview_vis_titles.source_id,trim(platform)) as track_id, 'track' as datatype, trim(platform) as platform, trim(platform_id) as platform_id, 'tagbase' as project, trim(project) as program, trim(instrument) as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, thumbnail_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles, mview_vis_variables WHERE mview_vis_titles.source_id = mview_vis_variables.source_id AND last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="track_id" name="track_id" />
            <field column="datatype" name="datatype" />
            <field column="platform" name="platform" />
            <field column="platform_id" name="platform_id" />
            <field column="project" name="project" />
            <field column="program" name="program" />
            <field column="mission" name="mission" />
            <field column="instrument" name="instrument" />
            <field column="start_date" name="start_date" />
            <field column="end_date" name="end_date" />
            <field column="lat_min" name="lat_min" />
            <field column="lat_max" name="lat_max" />
            <field column="lon_min" name="lon_min" />
            <field column="lon_max" name="lon_max" />
            <field column="description" name="description" />
            <field column="source_id" name="source_id" />
            <field column="thumbnail_url" name="thumbnail_url" />
            <field column="variables" splitBy="\|" sourceColName="variables"/>
            <field column="variables_units" splitBy="\|" sourceColName="variables_units"/>
        </entity>
        <entity name="mview_vis_data_tabular" pk="id" dataSource="spurs"
            query="SELECT 'spurs_data_'||row_number() OVER () as id, 'spurs' as project, 'data' as datatype, * FROM public.mview_vis_data_tabular;"
            deltaImportQuery="SELECT 'spurs_data_'||row_number() OVER () as id, 'spurs' as project, 'data' as datatype, * FROM public.mview_vis_data_tabular where 'spurs_data_'||row_number() OVER () = '${dih.delta.id}';"
            deltaQuery="SELECT 'spurs_data_'||row_number() OVER () as id, 'spurs' as project, 'data' as datatype, * FROM public.mview_vis_data_tabular where last_modified &gt; '${dih.last_index_time}';">
        </entity>
        <entity name="mview_vis_titles" pk="id" dataSource="spurs" transformer="RegexTransformer"
            query="SELECT 'spurs_track_'||row_number() OVER () as id, concat_ws('|','spurs',mview_vis_titles.source_id,platform) as track_id, 'track' as datatype, platform, platform_id, 'spurs' as project, project as program, instrument as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, thumbnail_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles, mview_vis_variables WHERE mview_vis_titles.source_id = mview_vis_variables.source_id;"
            deltaImportQuery="SELECT 'spurs_track_'||row_number() OVER () as id, concat_ws('|','spurs',mview_vis_titles.source_id,platform) as track_id, 'track' as datatype, platform, platform_id, 'spurs' as project, project as program, instrument as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, thumbnail_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles, mview_vis_variables WHERE mview_vis_titles.source_id = mview_vis_variables.source_id AND 'spurs_track_'||row_number() OVER () = '${dih.delta.id}';"
            deltaQuery="SELECT 'spurs_track_'||row_number() OVER () as id, concat_ws('|','spurs',mview_vis_titles.source_id,platform) as track_id, 'track' as datatype, platform, platform_id, 'spurs' as project, project as program, instrument as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, thumbnail_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles, mview_vis_variables WHERE mview_vis_titles.source_id = mview_vis_variables.source_id AND last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="track_id" name="track_id" />
            <field column="datatype" name="datatype" />
            <field column="platform" name="platform" />
            <field column="platform_id" name="platform_id" />
            <field column="mission" name="mission" />
            <field column="project" name="project" />
            <field column="program" name="program" />
            <field column="instrument" name="instrument" />
            <field column="start_date" name="start_date" />
            <field column="end_date" name="end_date" />
            <field column="lat_min" name="lat_min" />
            <field column="lat_max" name="lat_max" />
            <field column="lon_min" name="lon_min" />
            <field column="lon_max" name="lon_max" />
            <field column="description" name="description" />
            <field column="source_id" name="source_id" />
            <field column="thumbnail_url" name="thumbnail_url" />
            <field column="variables" splitBy="\|" sourceColName="variables"/>
            <field column="variables_units" splitBy="\|" sourceColName="variables_units"/>
        </entity>
        <entity name="mview_vis_data_tabular" pk="id" dataSource="saildrone"
            query="SELECT 'saildrone_data_'||row_number() OVER () as id, 'saildrone' as project, 'data' as datatype, * FROM public.mview_vis_data_tabular;"
            deltaImportQuery="SELECT 'saildrone_data_'||row_number() OVER () as id, 'saildrone' as project, 'data' as datatype, * FROM public.mview_vis_data_tabular where 'saildrone_data_'||row_number() OVER () = '${dih.delta.id}';"
            deltaQuery="SELECT 'saildrone_data_'||row_number() OVER () as id, 'saildrone' as project, 'data' as datatype, * FROM public.mview_vis_data_tabular where last_modified &gt; '${dih.last_index_time}';">
        </entity>
        <entity name="mview_vis_titles" pk="id" dataSource="saildrone" transformer="RegexTransformer"
            query="SELECT 'saildrone_track_'||row_number() OVER () as id, concat_ws('|','saildrone',mview_vis_titles.source_id,platform) as track_id, 'track' as datatype, platform, platform_id, 'saildrone' as project, project as program, instrument as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, thumbnail_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1),split_part(meastype11, ' (', 1),split_part(meastype12, ' (', 1),split_part(meastype13, ' (', 1),split_part(meastype14, ' (', 1),split_part(meastype15, ' (', 1),split_part(meastype16, ' (', 1),split_part(meastype17, ' (', 1),split_part(meastype18, ' (', 1),split_part(meastype19, ' (', 1),split_part(meastype20, ' (', 1),split_part(meastype21, ' (', 1),split_part(meastype22, ' (', 1),split_part(meastype23, ' (', 1),split_part(meastype24, ' (', 1),split_part(meastype25, ' (', 1),split_part(meastype26, ' (', 1),split_part(meastype27, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)'),substring(meastype11 from '\((.+)\)'),substring(meastype12 from '\((.+)\)'),substring(meastype13 from '\((.+)\)'),substring(meastype14 from '\((.+)\)'),substring(meastype15 from '\((.+)\)'),substring(meastype16 from '\((.+)\)'),substring(meastype17 from '\((.+)\)'),substring(meastype18 from '\((.+)\)'),substring(meastype19 from '\((.+)\)'),substring(meastype20 from '\((.+)\)'),substring(meastype21 from '\((.+)\)'),substring(meastype22 from '\((.+)\)'),substring(meastype23 from '\((.+)\)'),substring(meastype24 from '\((.+)\)'),substring(meastype25 from '\((.+)\)'),substring(meastype26 from '\((.+)\)'),substring(meastype27 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles, mview_vis_variables WHERE mview_vis_titles.source_id = mview_vis_variables.source_id;"
            deltaImportQuery="SELECT 'saildrone_track_'||row_number() OVER () as id, concat_ws('|','saildrone',mview_vis_titles.source_id,platform) as track_id, 'track' as datatype, platform, platform_id, 'saildrone' as project, project as program, instrument as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, thumbnail_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1),split_part(meastype11, ' (', 1),split_part(meastype12, ' (', 1),split_part(meastype13, ' (', 1),split_part(meastype14, ' (', 1),split_part(meastype15, ' (', 1),split_part(meastype16, ' (', 1),split_part(meastype17, ' (', 1),split_part(meastype18, ' (', 1),split_part(meastype19, ' (', 1),split_part(meastype20, ' (', 1),split_part(meastype21, ' (', 1),split_part(meastype22, ' (', 1),split_part(meastype23, ' (', 1),split_part(meastype24, ' (', 1),split_part(meastype25, ' (', 1),split_part(meastype26, ' (', 1),split_part(meastype27, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)'),substring(meastype11 from '\((.+)\)'),substring(meastype12 from '\((.+)\)'),substring(meastype13 from '\((.+)\)'),substring(meastype14 from '\((.+)\)'),substring(meastype15 from '\((.+)\)'),substring(meastype16 from '\((.+)\)'),substring(meastype17 from '\((.+)\)'),substring(meastype18 from '\((.+)\)'),substring(meastype19 from '\((.+)\)'),substring(meastype20 from '\((.+)\)'),substring(meastype21 from '\((.+)\)'),substring(meastype22 from '\((.+)\)'),substring(meastype23 from '\((.+)\)'),substring(meastype24 from '\((.+)\)'),substring(meastype25 from '\((.+)\)'),substring(meastype26 from '\((.+)\)'),substring(meastype27 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles, mview_vis_variables WHERE mview_vis_titles.source_id = mview_vis_variables.source_id; AND 'saildrone_track_'||row_number() OVER () = '${dih.delta.id}';"
            deltaQuery="SELECT 'saildrone_track_'||row_number() OVER () as id, concat_ws('|','saildrone',mview_vis_titles.source_id,platform) as track_id, 'track' as datatype, platform, platform_id, 'saildrone' as project, project as program, instrument as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, thumbnail_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1),split_part(meastype11, ' (', 1),split_part(meastype12, ' (', 1),split_part(meastype13, ' (', 1),split_part(meastype14, ' (', 1),split_part(meastype15, ' (', 1),split_part(meastype16, ' (', 1),split_part(meastype17, ' (', 1),split_part(meastype18, ' (', 1),split_part(meastype19, ' (', 1),split_part(meastype20, ' (', 1),split_part(meastype21, ' (', 1),split_part(meastype22, ' (', 1),split_part(meastype23, ' (', 1),split_part(meastype24, ' (', 1),split_part(meastype25, ' (', 1),split_part(meastype26, ' (', 1),split_part(meastype27, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)'),substring(meastype11 from '\((.+)\)'),substring(meastype12 from '\((.+)\)'),substring(meastype13 from '\((.+)\)'),substring(meastype14 from '\((.+)\)'),substring(meastype15 from '\((.+)\)'),substring(meastype16 from '\((.+)\)'),substring(meastype17 from '\((.+)\)'),substring(meastype18 from '\((.+)\)'),substring(meastype19 from '\((.+)\)'),substring(meastype20 from '\((.+)\)'),substring(meastype21 from '\((.+)\)'),substring(meastype22 from '\((.+)\)'),substring(meastype23 from '\((.+)\)'),substring(meastype24 from '\((.+)\)'),substring(meastype25 from '\((.+)\)'),substring(meastype26 from '\((.+)\)'),substring(meastype27 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles, mview_vis_variables WHERE mview_vis_titles.source_id = mview_vis_variables.source_id; AND last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="track_id" name="track_id" />
            <field column="datatype" name="datatype" />
            <field column="platform" name="platform" />
            <field column="platform_id" name="platform_id" />
            <field column="mission" name="mission" />
            <field column="project" name="project" />
            <field column="program" name="program" />
            <field column="instrument" name="instrument" />
            <field column="start_date" name="start_date" />
            <field column="end_date" name="end_date" />
            <field column="lat_min" name="lat_min" />
            <field column="lat_max" name="lat_max" />
            <field column="lon_min" name="lon_min" />
            <field column="lon_max" name="lon_max" />
            <field column="description" name="description" />
            <field column="source_id" name="source_id" />
            <field column="thumbnail_url" name="thumbnail_url" />
            <field column="variables" splitBy="\|" sourceColName="variables"/>
            <field column="variables_units" splitBy="\|" sourceColName="variables_units"/>
        </entity>
        <entity name="mview_vis_data_tabular" pk="id" dataSource="taghost"
            query="SELECT 'taghost_data_'||row_number() OVER () as id, 'taghost' as project, 'data' as datatype, * FROM public.mview_vis_data_tabular;"
            deltaImportQuery="SELECT 'taghost_data_'||row_number() OVER () as id, 'taghost' as project, 'data' as datatype, * FROM public.mview_vis_data_tabular where 'taghost_data_'||row_number = '${dih.delta.id}';"
            deltaQuery="SELECT 'taghost_data_'||row_number() OVER () as id, 'taghost' as project, 'data' as datatype, * FROM public.mview_vis_data_tabular where last_modified &gt; '${dih.last_index_time}';">
        </entity>
        <entity name="mview_vis_titles" pk="id" dataSource="taghost" transformer="RegexTransformer"
            query="SELECT 'taghost_track_'||row_number() OVER () as id, concat_ws('|','taghost',mview_vis_titles.source_id,trim(platform)) as track_id, 'track' as datatype, trim(platform) as platform, trim(platform_id) as platform_id, 'taghost' as project, trim(project) as program, trim(instrument) as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, thumbnail_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles, mview_vis_variables WHERE mview_vis_titles.source_id = mview_vis_variables.source_id;"
            deltaImportQuery="SELECT 'taghost_track_'||row_number() OVER () as id, concat_ws('|','taghost',mview_vis_titles.source_id,trim(platform)) as track_id, 'track' as datatype, trim(platform) as platform, trim(platform_id) as platform_id, 'taghost' as project, trim(project) as program, trim(instrument) as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, thumbnail_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles, mview_vis_variables WHERE mview_vis_titles.source_id = mview_vis_variables.source_id AND 'taghost_track_'||row_number() OVER () = '${dih.delta.id}';"
            deltaQuery="SELECT 'taghost_track_'||row_number() OVER () as id, concat_ws('|','taghost',mview_vis_titles.source_id,trim(platform)) as track_id, 'track' as datatype, trim(platform) as platform, trim(platform_id) as platform_id, 'taghost' as project, trim(project) as program, trim(instrument) as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, thumbnail_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles, mview_vis_variables WHERE mview_vis_titles.source_id = mview_vis_variables.source_id AND last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="track_id" name="track_id" />
            <field column="datatype" name="datatype" />
            <field column="platform" name="platform" />
            <field column="platform_id" name="platform_id" />
            <field column="project" name="project" />
            <field column="program" name="program" />
            <field column="mission" name="mission" />
            <field column="instrument" name="instrument" />
            <field column="start_date" name="start_date" />
            <field column="end_date" name="end_date" />
            <field column="lat_min" name="lat_min" />
            <field column="lat_max" name="lat_max" />
            <field column="lon_min" name="lon_min" />
            <field column="lon_max" name="lon_max" />
            <field column="description" name="description" />
            <field column="source_id" name="source_id" />
            <field column="thumbnail_url" name="thumbnail_url" />
            <field column="variables" splitBy="\|" sourceColName="variables"/>
            <field column="variables_units" splitBy="\|" sourceColName="variables_units"/>
        </entity>
        <entity name="mview_vis_data_tabular" pk="id" dataSource="csiro"
            query="SELECT 'csiro_data_'||row_number() OVER () as id, 'csiro' as project, 'data' as datatype, * FROM public.mview_vis_data_tabular;"
            deltaImportQuery="SELECT 'csiro_data_'||row_number() OVER () as id, 'csiro' as project, 'data' as datatype, * FROM public.mview_vis_data_tabular where 'csiro_data_'||row_number = '${dih.delta.id}';"
            deltaQuery="SELECT 'csiro_data_'||row_number() OVER () as id, 'csiro' as project, 'data' as datatype, * FROM public.mview_vis_data_tabular where last_modified &gt; '${dih.last_index_time}';">
        </entity>
        <entity name="mview_vis_titles" pk="id" dataSource="csiro" transformer="RegexTransformer"
            query="SELECT 'csiro_track_'||row_number() OVER () as id, concat_ws('|','csiro',mview_vis_titles.source_id,trim(platform)) as track_id, 'track' as datatype, trim(platform) as platform, trim(platform_id) as platform_id, 'csiro' as project, trim(project) as program, trim(instrument) as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, thumbnail_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles, mview_vis_variables WHERE mview_vis_titles.source_id = mview_vis_variables.source_id;"
            deltaImportQuery="SELECT 'csiro_track_'||row_number() OVER () as id, concat_ws('|','csiro',mview_vis_titles.source_id,trim(platform)) as track_id, 'track' as datatype, trim(platform) as platform, trim(platform_id) as platform_id, 'csiro' as project, trim(project) as program, trim(instrument) as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, thumbnail_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles, mview_vis_variables WHERE mview_vis_titles.source_id = mview_vis_variables.source_id AND 'csiro_track_'||row_number() OVER () = '${dih.delta.id}';"
            deltaQuery="SELECT 'csiro_track_'||row_number() OVER () as id, concat_ws('|','csiro',mview_vis_titles.source_id,trim(platform)) as track_id, 'track' as datatype, trim(platform) as platform, trim(platform_id) as platform_id, 'csiro' as project, trim(project) as program, trim(instrument) as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, thumbnail_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles, mview_vis_variables WHERE mview_vis_titles.source_id = mview_vis_variables.source_id AND last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="track_id" name="track_id" />
            <field column="datatype" name="datatype" />
            <field column="platform" name="platform" />
            <field column="platform_id" name="platform_id" />
            <field column="project" name="project" />
            <field column="program" name="program" />
            <field column="mission" name="mission" />
            <field column="instrument" name="instrument" />
            <field column="start_date" name="start_date" />
            <field column="end_date" name="end_date" />
            <field column="lat_min" name="lat_min" />
            <field column="lat_max" name="lat_max" />
            <field column="lon_min" name="lon_min" />
            <field column="lon_max" name="lon_max" />
            <field column="description" name="description" />
            <field column="source_id" name="source_id" />
            <field column="thumbnail_url" name="thumbnail_url" />
            <field column="variables" splitBy="\|" sourceColName="variables"/>
            <field column="variables_units" splitBy="\|" sourceColName="variables_units"/>
        </entity>
        <!-- satellite database only contains metadata for satellite layers -->
        <entity name="mview_vis_titles" pk="id" dataSource="satellite" transformer="RegexTransformer"
            query="SELECT 'satellite_layer_'||row_number() OVER () as id, concat_ws('|','satellite',mview_vis_titles.source_id,trim(platform)) as track_id, 'layer' as datatype, trim(platform) as platform, trim(platform_id) as platform_id, 'satellite' as project, trim(project) as program, trim(instrument) as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, resolution_spatial, resolution_temporal, latency, producer, level, layer_id, service_url, thumbnail_url, array_to_string(colorbar_url, '|') as colorbar_url, tds_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles LEFT JOIN mview_vis_variables ON mview_vis_titles.source_id = mview_vis_variables.source_id;"
            deltaImportQuery="SELECT 'satellite_layer_'||row_number() OVER () as id, concat_ws('|','satellite',mview_vis_titles.source_id,trim(platform)) as track_id, 'layer' as datatype, trim(platform) as platform, trim(platform_id) as platform_id, 'satellite' as project, trim(project) as program, trim(instrument) as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, resolution_spatial, resolution_temporal, latency, producer, level, layer_id, service_url, thumbnail_url, array_to_string(colorbar_url, '|') as colorbar_url, tds_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles LEFT JOIN mview_vis_variables ON mview_vis_titles.source_id = mview_vis_variables.source_id WHERE 'satellite_layer_'||row_number() OVER () = '${dih.delta.id}';"
            deltaQuery="SELECT 'satellite_layer_'||row_number() OVER () as id, concat_ws('|','satellite',mview_vis_titles.source_id,trim(platform)) as track_id, 'layer' as datatype, trim(platform) as platform, trim(platform_id) as platform_id, 'satellite' as project, trim(project) as program, trim(instrument) as instrument, trim(mission) as mission, extract(epoch from meastime_min) as start_date, extract(epoch from meastime_max) as end_date, lat_min, lat_max, lon_min, lon_max, descriptions as description, resolution_spatial, resolution_temporal, latency, producer, level, layer_id, service_url, thumbnail_url, array_to_string(colorbar_url, '|') as colorbar_url, tds_url, concat_ws('|',split_part(meastype1, ' (', 1),split_part(meastype2, ' (', 1),split_part(meastype3, ' (', 1),split_part(meastype4, ' (', 1),split_part(meastype5, ' (', 1),split_part(meastype6, ' (', 1),split_part(meastype7, ' (', 1),split_part(meastype8, ' (', 1),split_part(meastype9, ' (', 1),split_part(meastype10, ' (', 1)) as variables, concat_ws('|',substring(meastype1 from '\((.+)\)'),substring(meastype2 from '\((.+)\)'),substring(meastype3 from '\((.+)\)'),substring(meastype4 from '\((.+)\)'),substring(meastype5 from '\((.+)\)'),substring(meastype6 from '\((.+)\)'),substring(meastype7 from '\((.+)\)'),substring(meastype8 from '\((.+)\)'),substring(meastype9 from '\((.+)\)'),substring(meastype10 from '\((.+)\)')) as variables_units, mview_vis_titles.source_id FROM mview_vis_titles LEFT JOIN mview_vis_variables ON mview_vis_titles.source_id = mview_vis_variables.source_id WHERE last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="track_id" name="track_id" />
            <field column="datatype" name="datatype" />
            <field column="platform" splitBy="\|" sourceColName="platform"/>
            <field column="platform_id" name="platform_id" />
            <field column="project" name="project" />
            <field column="program" name="program" />
            <field column="mission" splitBy="\|" sourceColName="mission" />
            <field column="instrument" splitBy="\|" sourceColName="instrument" />
            <field column="start_date" name="start_date" />
            <field column="end_date" name="end_date" />
            <field column="lat_min" name="lat_min" />
            <field column="lat_max" name="lat_max" />
            <field column="lon_min" name="lon_min" />
            <field column="lon_max" name="lon_max" />
            <field column="description" name="description" />
            <field column="resolution_spatial" name="resolution_spatial" />
            <field column="resolution_temporal" name="resolution_temporal" />
            <field column="latency" name="latency" />
            <field column="producer" name="producer" />
            <field column="level" name="level" />
            <field column="layer_id" splitBy="\|" sourceColName="layer_id" />
            <field column="service_url" name="service_url" />
            <field column="thumbnail_url" name="thumbnail_url" />
            <field column="colorbar_url" splitBy="\|" sourceColName="colorbar_url" />
            <field column="tds_url" name="tds_url" />
            <field column="variables" splitBy="\|" sourceColName="variables"/>
            <field column="variables_units" splitBy="\|" sourceColName="variables_units"/>
            <field column="source_id" name="source_id" />
        </entity>
        <!-- mview_vis_data_histogram is not required -->
        <entity name="mview_vis_data_histogram" pk="id" dataSource="tagbase"
            query="SELECT 'tagbase_histogram_'||row_number() OVER () as id, 'tagbase' as project, 'histogram' as datatype, source_id, bin_class, measurement_value, measurement_units, measurement_name, measurement_date_time, position_date_time, lat, lon, lat_err as lat_error, lon_err as lon_error, lat::text || ',' || lon::text AS geom from mview_vis_data_histogram;"
            deltaImportQuery="SELECT 'tagbase_histogram_'||row_number() OVER () as id, 'tagbase' as project, 'histogram' as datatype, source_id, bin_class, measurement_value, measurement_units, measurement_name, measurement_date_time, position_date_time, lat, lon, lat_err as lat_error, lon_err as lon_error, lat::text || ',' || lon::text AS geom from mview_vis_data_histogram where 'tagbase_histogram_'||row_number = '${dih.delta.id}';"
            deltaQuery="SELECT 'tagbase_histogram_'||row_number() OVER () as id, 'tagbase' as project, 'histogram' as datatype, source_id, bin_class, measurement_value, measurement_units, measurement_name, measurement_date_time, position_date_time, lat, lon, lat_err as lat_error, lon_err as lon_error, lat::text || ',' || lon::text AS geom from mview_vis_data_histogram where last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="project" name="project" />
            <field column="datatype" name="datatype" />
            <field column="source_id" name="source_id" />
            <field column="bin_class" name="bin_class" />
            <field column="measurement_value" name="measurement_value" />
            <field column="measurement_units" name="measurement_units" />
            <field column="measurement_name" name="measurement_name" />
            <field column="measurement_date_time" name="measurement_date_time" />
            <field column="position_date_time" name="position_date_time" />
            <field column="lat" name="lat" />
            <field column="lon" name="lon" />
            <field column="lat_error" name="lat_err" />
            <field column="lon_error" name="lon_err" />
            <field column="geom" name="geom" />
        </entity>
        <!-- mview_vis_data_profile is not required -->
        <entity name="mview_vis_data_profile" pk="id" dataSource="tagbase"
            query="SELECT 'tagbase_profile_'||row_number() OVER () as id, 'tagbase' as project, 'profile' as datatype, source_id, bin_class, depth, measurement_value_min, measurement_value_max, measurement_units, measurement_name, measurement_date_time, position_date_time, lat, lon, lat_err as lat_error, lon_err as lon_error, lat::text || ',' || lon::text AS geom from mview_vis_data_profile;"
            deltaImportQuery="SELECT 'tagbase_profile_'||row_number() OVER () as id, 'tagbase' as project, 'profile' as datatype, source_id, bin_class, depth, measurement_value_min, measurement_value_max, measurement_units, measurement_name, measurement_date_time, position_date_time, lat, lon, lat_err as lat_error, lon_err as lon_error, lat::text || ',' || lon::text AS geom from mview_vis_data_profile where 'tagbase_profile_'||row_number = '${dih.delta.id}';"
            deltaQuery="SELECT 'tagbase_profile_'||row_number() OVER () as id, 'tagbase' as project, 'profile' as datatype, source_id, bin_class, depth, measurement_value_min, measurement_value_max, measurement_units, measurement_name, measurement_date_time, position_date_time, lat, lon, lat_err as lat_error, lon_err as lon_error, lat::text || ',' || lon::text AS geom from mview_vis_data_profile where last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="project" name="project" />
            <field column="datatype" name="datatype" />
            <field column="source_id" name="source_id" />
            <field column="bin_class" name="bin_class" />
            <field column="depth" name="depth" />
            <field column="measurement_value_min" name="measurement_value_min" />
            <field column="measurement_value_max" name="measurement_value_max" />
            <field column="measurement_units" name="measurement_units" />
            <field column="measurement_name" name="measurement_name" />
            <field column="measurement_date_time" name="measurement_date_time" />
            <field column="position_date_time" name="position_date_time" />
            <field column="lat" name="lat" />
            <field column="lon" name="lon" />
            <field column="lat_error" name="lat_err" />
            <field column="lon_error" name="lon_err" />
            <field column="geom" name="geom" />
        </entity>    
        <!-- mview_vis_metadata is not required -->
        <entity name="mview_vis_metadata" pk="id" dataSource="tagbase"
            query="SELECT 'tagbase_metadata_'||row_number() OVER () as id, 'tagbase' as project, 'metadata' as datatype, source_id, attribute_type, variable, category, attribute_name, attribute_value from mview_vis_metadata;"
            deltaImportQuery="SELECT 'tagbase_metadata_'||row_number() OVER () as id, 'tagbase' as project, 'metadata' as datatype, source_id, attribute_type, variable, category, attribute_name, attribute_value from mview_vis_metadata where 'tagbase_metadata_'||row_number() OVER () = '${dih.delta.id}';"
            deltaQuery="SELECT 'tagbase_metadata_'||row_number() OVER () as id, 'tagbase' as project, 'metadata' as datatype, source_id, attribute_type, variable, category, attribute_name, attribute_value from mview_vis_metadata where last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="source_id" name="source_id" />
            <field column="project" name="project" />
            <field column="datatype" name="datatype" />
            <field column="attribute_type" name="attribute_type" />
            <field column="variable" name="variable" />
            <field column="category" name="category" />
            <field column="attribute_name" name="attribute_name" />
            <field column="attribute_value" name="attribute_value" />
        </entity>
        <!-- mview_vis_metadata is not required -->
        <entity name="mview_vis_metadata" pk="id" dataSource="spurs"
            query="SELECT 'spurs_metadata_'||row_number() OVER () as id, 'spurs' as project, 'metadata' as datatype, source_id, attribute_type, variable, attribute_name, attribute_value from mview_vis_metadata;"
            deltaImportQuery="SELECT 'spurs_metadata_'||row_number() OVER () as id, 'spurs' as project, 'metadata' as datatype, source_id, attribute_type, variable, attribute_name, attribute_value from mview_vis_metadata where 'spurs_metadata_'||row_number() OVER () = '${dih.delta.id}';"
            deltaQuery="SELECT 'spurs_metadata_'||row_number() OVER () as id, 'spurs' as project, 'metadata' as datatype, source_id, attribute_type, variable, attribute_name, attribute_value from mview_vis_metadata where last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="source_id" name="source_id" />
            <field column="project" name="project" />
            <field column="datatype" name="datatype" />
            <field column="attribute_type" name="attribute_type" />
            <field column="variable" name="variable" />
            <field column="attribute_name" name="attribute_name" />
            <field column="attribute_value" name="attribute_value" />
        </entity>
        <!-- mview_vis_metadata is not required -->
        <entity name="mview_vis_metadata" pk="id" dataSource="saildrone"
            query="SELECT 'saildrone_metadata_'||row_number() OVER () as id, 'saildrone' as project, 'metadata' as datatype, source_id, attribute_type, variable, attribute_name, attribute_value from mview_vis_metadata;"
            deltaImportQuery="SELECT 'saildrone_metadata_'||row_number() OVER () as id, 'saildrone' as project, 'metadata' as datatype, source_id, attribute_type, variable, attribute_name, attribute_value from mview_vis_metadata where 'saildrone_metadata_'||row_number() OVER () = '${dih.delta.id}';"
            deltaQuery="SELECT 'saildrone_metadata_'||row_number() OVER () as id, 'saildrone' as project, 'metadata' as datatype, source_id, attribute_type, variable, attribute_name, attribute_value from mview_vis_metadata where last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="source_id" name="source_id" />
            <field column="project" name="project" />
            <field column="datatype" name="datatype" />
            <field column="attribute_type" name="attribute_type" />
            <field column="variable" name="variable" />
            <field column="attribute_name" name="attribute_name" />
            <field column="attribute_value" name="attribute_value" />
        </entity>
    </document>
</dataConfig>
