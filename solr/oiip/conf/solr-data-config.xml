<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<dataConfig>
    <dataSource driver="org.postgresql.Driver"
        url="jdbc:postgresql://localhost:5432/tagbase"
        name="tagbase"
        user="tagbase"
        password="" />
    <dataSource driver="org.postgresql.Driver"
    	url="jdbc:postgresql://localhost:5432/spurs"
    	name="spurs"
    	user="spurs"
    	password="" />
    <document name="oiip">
        <entity name="mview_vis_data" pk="id" dataSource="tagbase"
            query="SELECT 'tag_'||row_number as id, row_number, submission_id, tag_id, variable_value, variable_name, variable_units, depth, extract('epoch' from match_up_time_difference) as match_up_time_difference, data_date_time, position_date_time, lat, lon, lat_err, lon_err, lat::text || ',' || lon::text AS geom from mview_vis_data;"
            deltaImportQuery="SELECT 'tag_'||row_number as id, row_number, submission_id, tag_id, variable_value, variable_name, variable_units, depth, extract('epoch' from match_up_time_difference) as match_up_time_difference, data_date_time, position_date_time, lat, lon, lat_err, lon_err, lat::text || ',' || lon::text AS geom from mview_vis_data where 'tag_'||row_number = '${dih.delta.id}';"
            deltaQuery="SELECT 'tag_'||row_number as id, row_number, submission_id, tag_id, variable_value, variable_name, variable_units, depth, extract('epoch' from match_up_time_difference) as match_up_time_difference, data_date_time, position_date_time, lat, lon, lat_err, lon_err, lat::text || ',' || lon::text AS geom from mview_vis_data where last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="row_number" name="row_number" />
            <field column="submission_id" name="submission_id" />
            <field column="tag_id" name="tag_id" />
            <field column="variable_value" name="variable_value" />
            <field column="variable_name" name="variable_name" />
            <field column="variable_units" name="variable_units" />
            <field column="depth" name="depth" />
            <field column="match_up_time_difference" name="match_up_time_difference" />
            <field column="data_date_time" name="data_date_time" />
            <field column="position_date_time" name="position_date_time" />
            <field column="lat" name="lat" />
            <field column="lon" name="lon" />
            <field column="lat_err" name="lat_err" />
            <field column="lon_err" name="lon_err" />
            <field column="geom" name="geom" />
        </entity>
        <entity name="mview_vis_data_histogram" pk="id" dataSource="tagbase"
            query="SELECT 'his_'||row_number as id, row_number, submission_id, tag_id, bin_id, min_value, max_value, units, type, extract('epoch' from match_up_time_difference) as match_up_time_difference, data_date_time, position_date_time, lat, lon, lat_err, lon_err, lat::text || ',' || lon::text AS geom from mview_vis_data_histogram"
            deltaImportQuery="SELECT 'his_'||row_number as id, row_number, submission_id, tag_id, bin_id, min_value, max_value, units, type, extract('epoch' from match_up_time_difference) as match_up_time_difference, data_date_time, position_date_time, lat, lon, lat_err, lon_err, lat::text || ',' || lon::text AS geom from mview_vis_data_histogram where 'tag_'||row_number = '${dih.delta.id}';"
            deltaQuery="SELECT 'his_'||row_number as id, row_number, submission_id, tag_id, bin_id, min_value, max_value, units, type, extract('epoch' from match_up_time_difference) as match_up_time_difference, data_date_time, position_date_time, lat, lon, lat_err, lon_err, lat::text || ',' || lon::text AS geom from mview_vis_data_histogram where last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="row_number" name="row_number" />
            <field column="submission_id" name="submission_id" />
            <field column="tag_id" name="tag_id" />
            <field column="bin_id" name="bin_id" />
            <field column="min_value" name="min_value" />
            <field column="max_value" name="max_value" />
            <field column="units" name="units" />
            <field column="type" name="type" />
            <field column="match_up_time_difference" name="match_up_time_difference" />
            <field column="data_date_time" name="data_date_time" />
            <field column="position_date_time" name="position_date_time" />
            <field column="lat" name="lat" />
            <field column="lon" name="lon" />
            <field column="lat_err" name="lat_err" />
            <field column="lon_err" name="lon_err" />
            <field column="geom" name="geom" />
        </entity>
        <entity name="mview_vis_data_profile" pk="id" dataSource="tagbase"
            query="SELECT 'pro_'||row_number as id, row_number, submission_id, tag_id, bin_class, depth, min_value, max_value, units, type, extract('epoch' from match_up_time_difference) as match_up_time_difference, data_date_time, position_date_time, lat, lon, lat_err, lon_err, lat::text || ',' || lon::text AS geom from mview_vis_data_profile"
            deltaImportQuery="SELECT 'pro_'||row_number as id, row_number, submission_id, tag_id, bin_class, depth, min_value, max_value, units, type, extract('epoch' from match_up_time_difference) as match_up_time_difference, data_date_time, position_date_time, lat, lon, lat_err, lon_err, lat::text || ',' || lon::text AS geom from mview_vis_data_profile where 'tag_'||row_number = '${dih.delta.id}';"
            deltaQuery="SELECT 'pro_'||row_number as id, row_number, submission_id, tag_id, bin_class, depth, min_value, max_value, units, type, extract('epoch' from match_up_time_difference) as match_up_time_difference, data_date_time, position_date_time, lat, lon, lat_err, lon_err, lat::text || ',' || lon::text AS geom from mview_vis_data_profile where last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="row_number" name="row_number" />
            <field column="submission_id" name="submission_id" />
            <field column="tag_id" name="tag_id" />
            <field column="bin_class" name="bin_class" />
            <field column="depth" name="depth" />
            <field column="min_value" name="min_value" />
            <field column="max_value" name="max_value" />
            <field column="units" name="units" />
            <field column="type" name="type" />
            <field column="match_up_time_difference" name="match_up_time_difference" />
            <field column="data_date_time" name="data_date_time" />
            <field column="position_date_time" name="position_date_time" />
            <field column="lat" name="lat" />
            <field column="lon" name="lon" />
            <field column="lat_err" name="lat_err" />
            <field column="lon_err" name="lon_err" />
            <field column="geom" name="geom" />
        </entity>
        <entity name="mview_vis_data" pk="id" dataSource="spurs"
            query="SELECT 'spurs_vis_'||row_number() OVER () as id, source_id, measurement_value, measurement_name, measurement_units, depth, measurement_date_time, position_date_time, lat, lon, lat_err, lon_err, lat::text || ',' || lon::text AS geom from mview_vis_data;"
            deltaImportQuery="SELECT 'spurs_vis_'||row_number() OVER () as id, source_id, measurement_value, measurement_name, measurement_units, depth, measurement_date_time, position_date_time, lat, lon, lat_err, lon_err, lat::text || ',' || lon::text AS geom from mview_vis_data where 'spurs_vis_'||row_number() OVER () = '${dih.delta.id}';"
            deltaQuery="SELECT 'spurs_vis_'||row_number() OVER () as id, source_id, measurement_value, measurement_name, measurement_units, depth, measurement_date_time, position_date_time, lat, lon, lat_err, lon_err, lat::text || ',' || lon::text AS geom from mview_vis_data where last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="source_id" name="source_id" />
            <field column="measurement_value" name="measurement_value" />
            <field column="measurement_name" name="measurement_name" />
            <field column="measurement_units" name="measurement_units" />
            <field column="depth" name="depth" />
            <field column="measurement_date_time" name="measurement_date_time" />
            <field column="position_date_time" name="position_date_time" />
            <field column="lat" name="lat" />
            <field column="lon" name="lon" />
            <field column="lat_err" name="lat_err" />
            <field column="lon_err" name="lon_err" />
            <field column="geom" name="geom" />
        </entity>
        <entity name="mview_vis_metadata" pk="id" dataSource="spurs"
            query="SELECT 'spurs_meta_'||row_number() OVER () as id, source_id, attribute_type, variable, attribute_name, attribute_value from mview_vis_metadata;"
            deltaImportQuery="SELECT 'spurs_meta_'||row_number() OVER () as id, source_id, attribute_type, variable, attribute_name, attribute_value from mview_vis_metadata where 'spurs_meta_'||row_number() OVER () = '${dih.delta.id}';"
            deltaQuery="SELECT 'spurs_meta_'||row_number() OVER () as id, source_id, attribute_type, variable, attribute_name, attribute_value from mview_vis_metadata where last_modified &gt; '${dih.last_index_time}';">
            <field column="id" name="id" />
            <field column="source_id" name="source_id" />
            <field column="attribute_type" name="attribute_type" />
            <field column="variable" name="variable" />
            <field column="attribute_name" name="attribute_name" />
            <field column="attribute_value" name="attribute_value" />
        </entity>
    </document>
</dataConfig>
